# config.py

import os
import json
from http.cookies import SimpleCookie

# Gốc của module fb_stalker (absolute path)
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
BASE_NAME = "fb_stalker"

# Định nghĩa thư mục lưu video và lịch sử
VIDEO_DIR = os.path.join(BASE_DIR, 'videos')
HISTORY_FILE = os.path.join(BASE_DIR, 'history', 'video_history.json')
COOKIES_PATH = os.path.join(BASE_DIR, 'cookies', 'facebook_cookies.json')
PROFILE_DIR = os.path.join(BASE_DIR, 'cookies', 'facebook_profile')
STEALTH_SCRIPT = os.path.join(BASE_DIR, 'stealth.js')
FANPAGES = os.path.join(BASE_DIR, 'pages.txt')

# Thư mục chứa cookie dạng Netscape
NETSCAPE_DIR = os.path.join(BASE_DIR, 'netscape')
os.makedirs(NETSCAPE_DIR, exist_ok=True)


# Thời gian nghỉ giữa các vòng và Thời gian delay giữa fanpage này và fanpage khác
WAIT_BETWEEN_ROUNDS = 60
DELAY_TIME = 10
STALKER_MOUSE_WHEEL = 1500

# Nhóm số lượng stalkers được phép hoạt động đồng thời
BATCH_SIZE = 5

# facebook_cookies.json lấy được sau khi login -> convert sang dạng facebook_cookies_netscape lưu vào /netscape
def convert_json_to_netscape(cookies_json, output_file=None):
    """
    Chuyển đổi cookies từ định dạng JSON sang Netscape.
    Mặc định output vào netscape/facebook_cookies_netscape.txt
    """
    if output_file is None:
        output_file = os.path.join(NETSCAPE_DIR, 'facebook_cookies_netscape.txt')

    with open(cookies_json, 'r', encoding='utf-8') as f:
        cookies = json.load(f)

    with open(output_file, 'w', encoding='utf-8') as f:
        f.write("# Netscape HTTP Cookie File\n")
        f.write("# https://www.netscape.com/newsref/std/cookie_spec.html\n")
        f.write("# This file was generated by Python.\n")

        for cookie in cookies:
            domain = cookie.get('domain', '')
            path = cookie.get('path', '/')
            expires = cookie.get('expires')
            expiry = str(int(expires)) if expires else '0'
            name = cookie.get('name', '')
            value = cookie.get('value', '')
            secure = 'TRUE' if cookie.get('secure', False) else 'FALSE'
            include_sub = 'TRUE' if domain.startswith('.') else 'FALSE'
            f.write(f"{domain}\t{include_sub}\t{path}\t{secure}\t{expiry}\t{name}\t{value}\n")

    print(f"🌐 Đã chuyển cookies sang định dạng Netscape và lưu vào {output_file}")
    return output_file

def save_metadata_to_history(metadata):
    history = []
    with open(HISTORY_FILE, 'r', encoding='utf-8') as f:
        history = json.load(f)

    # Thêm mới và lưu lại
    history.append(metadata)
    with open(HISTORY_FILE, 'w', encoding='utf-8') as f:
        json.dump(history, f, indent=2, ensure_ascii=False)

    print(f"💾💾💾💾💾 Đã lưu metadata vào {HISTORY_FILE}")